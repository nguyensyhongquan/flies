// Main content loading functions
function loadHome() {
    document.getElementById("homePage").classList.remove("d-none");
    document.getElementById("dynamicContent").classList.add("d-none");
    loadCourses();
}

/**
 * Hi·ªÉn th·ªã th√¥ng b√°o tin nh·∫Øn trong giao di·ªán
 * @param {string} message - N·ªôi dung th√¥ng b√°o
 * @param {string} type - Lo·∫°i th√¥ng b√°o ('success', 'danger', 'info')
 * @param {number} duration - Th·ªùi gian hi·ªÉn th·ªã (miliseconds), m·∫∑c ƒë·ªãnh l√† 3000ms
 */
function showNotification(message, type = 'info', duration = 3000) {
    const notification = document.createElement('div');
    notification.className = `alert alert-${type} alert-dismissible fade show`;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1050;
        min-width: 250px;
    `;
    notification.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    `;
    document.body.appendChild(notification);

    // T·ª± ƒë·ªông ·∫©n sau th·ªùi gian ch·ªâ ƒë·ªãnh
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            notification.remove();
        }, 150); // ƒê·ª£i hi·ªáu ·ª©ng Bootstrap ho√†n t·∫•t
    }, duration);
}

// Kh√¥i ph·ª•c danh s√°ch tin nh·∫Øn gi·∫£ l·∫≠p
window.messages = [
    { id: 1, studentName: "Nguy·ªÖn VƒÉn A", content: "Th·∫ßy ∆°i, em c·∫ßn feedback cho b√†i Writing Task 1 ·∫°!", time: "09:20", isRead: false },
    { id: 2, studentName: "V≈© VƒÉn H", content: "Em ƒëang g·∫∑p kh√≥ v·ªõi Listening, th·∫ßy c√≥ t√†i li·ªáu n√†o kh√¥ng?", time: "09:22", isRead: false },
    { id: 3, studentName: "Ho√†ng Th·ªã E", content: "Th·∫ßy gi√∫p em c√°ch vi·∫øt conclusion Task 2 nh√©!", time: "09:25", isRead: false }
];

// Bi·∫øn ƒë·ªÉ ki·ªÉm so√°t hi·ªÉn th·ªã badge chu√¥ng
let isNotificationHidden = false;

// H√†m c·∫≠p nh·∫≠t badge chu√¥ng th√¥ng b√°o
function updateNotificationBadge() {
    const notificationBell = document.querySelector('.btn.btn-light.position-relative');
    if (notificationBell) {
        const unreadCount = window.messages.filter(msg => !msg.isRead).length;
        notificationBell.innerHTML = `
            üîî
            ${!isNotificationHidden && unreadCount > 0 ? `
                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                    ${unreadCount}
                    <span class="visually-hidden">unread messages</span>
                </span>
            ` : ''}
        `;
    }
}

// H√†m ƒë√°nh d·∫•u tin nh·∫Øn ƒë√£ ƒë·ªçc
function markMessageAsRead(messageId) {
    const message = window.messages.find(msg => msg.id === messageId);
    if (message) {
        message.isRead = true;
        const messageCard = document.querySelector(`#message-${messageId} .status-btn`);
        if (messageCard) {
            messageCard.className = 'btn btn-sm btn-success status-btn';
            messageCard.textContent = 'ƒê√£ ƒë·ªçc';
        }
        updateNotificationBadge();
    }
}

// H√†m m·ªü Chat Box v·ªõi h·ªçc sinh ƒë∆∞·ª£c ch·ªçn
function openChatWithStudent(studentName, messageId) {
    markMessageAsRead(messageId); // ƒê√°nh d·∫•u tin nh·∫Øn l√† ƒë√£ ƒë·ªçc
    showContent('chatBox', studentName); // Chuy·ªÉn sang Chat Box v·ªõi h·ªçc sinh
}

// S·ª≠a h√†m showContent ƒë·ªÉ h·ªó tr·ª£ b·∫•t ƒë·ªìng b·ªô v√† truy·ªÅn tham s·ªë cho getGradeTemplate
async function showContent(contentId, selectedStudent = null) {
    document.getElementById("homePage").classList.add("d-none");
    document.getElementById("dynamicContent").classList.remove("d-none");

    // Load appropriate content based on ID
    if (contentId === "myStudent") {
        loadClassroomSection();
    } else if (contentId === "chatBox") {
        // G·ªçi h√†m t·ª´ message.js ƒë·ªÉ load Chat Box, truy·ªÅn selectedStudent
        if (typeof window.loadChatBox === "function") {
            window.loadChatBox(selectedStudent);
        } else {
            console.error("H√†m loadChatBox ch∆∞a ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a. Ki·ªÉm tra file message.js");
            document.getElementById("dynamicContent").innerHTML = "<h2>L·ªói</h2><p>Kh√¥ng th·ªÉ t·∫£i Chat Box. Vui l√≤ng ki·ªÉm tra l·∫°i.</p>";
        }
    } else {
        let content;
        if (contentId === "grade") {
            // Ch·ªù getGradeTemplate ho√†n t·∫•t v√† truy·ªÅn tham s·ªë studentId, classroomId
            content = await window.getGradeTemplate("student123", "classroom456");
        } else {
            content = getContentTemplate(contentId);
        }
        console.log(`ƒêang render n·ªôi dung cho contentId: ${contentId}`);
        document.getElementById("dynamicContent").innerHTML = content;
        console.log("N·ªôi dung dynamicContent sau khi render:", document.getElementById("dynamicContent").innerHTML);

        // Kh·ªüi t·∫°o bi·ªÉu ƒë·ªì k·ªπ nƒÉng n·∫øu ƒëang hi·ªÉn th·ªã trang grade
        if (contentId === "grade") {
            setTimeout(() => {
                console.log("ƒêang g·ªçi initGradeCharts...");
                const canvas = document.getElementById("skillsChart");
                if (canvas) {
                    console.log("T√¨m th·∫•y canvas v·ªõi ID 'skillsChart'.");
                } else {
                    console.error("Kh√¥ng t√¨m th·∫•y canvas v·ªõi ID 'skillsChart' sau 100ms.");
                }
                if (typeof window.initGradeCharts === "function") {
                    window.initGradeCharts();
                } else {
                    console.error("H√†m initGradeCharts ch∆∞a ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a. Ki·ªÉm tra file grade.js");
                }
            }, 100);
        }

        // Th√™m s·ª± ki·ªán cho n√∫t tr·∫°ng th√°i trong newMessage
        if (contentId === "newMessage") {
            document.querySelectorAll('.status-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    e.stopPropagation(); // NgƒÉn click n√∫t tr·∫°ng th√°i k√≠ch ho·∫°t m·ªü Chat Box
                    const messageId = parseInt(btn.dataset.messageId);
                    markMessageAsRead(messageId);
                });
            });
        }
    }
}

// S·ª≠a h√†m getContentTemplate ƒë·ªÉ kh√¥ng g·ªçi tr·ª±c ti·∫øp getGradeTemplate
function getContentTemplate(contentId) {
    const templates = {
        myCourse: "<h2>My Course</h2><p>Danh s√°ch kh√≥a h·ªçc c·ªßa b·∫°n.</p>",
        addCourse: "<h2>Add Course</h2><p>Form th√™m kh√≥a h·ªçc.</p>",
        addQuiz: "<h2>Add Quiz</h2><p>Form t·∫°o b√†i ki·ªÉm tra.</p>",
        newMessage: `
            <div class="card p-4">
                <h2 class="mb-3">Tin Nh·∫Øn M·ªõi</h2>
                <p class="text-muted mb-4">Danh s√°ch tin nh·∫Øn t·ª´ h·ªçc vi√™n:</p>
                <div id="messageList">
                    ${generateMessageList()}
                </div>
            </div>
        `,
        chatBox: "", // ƒê·ªÉ tr·ªëng v√¨ d√πng loadChatBox t·ª´ message.js
        grade: "", // Kh√¥ng g·ªçi tr·ª±c ti·∫øp ·ªü ƒë√¢y, s·∫Ω x·ª≠ l√Ω trong showContent
    };

    return templates[contentId] || "<h2>Content Not Found</h2>";
}

// H√†m t·∫°o danh s√°ch th√¥ng b√°o
function generateMessageList() {
    return window.messages
        .map(
            (msg) => `
                <div class="card message-card mb-3" id="message-${msg.id}" onclick="openChatWithStudent('${msg.studentName}', ${msg.id})">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <img src="https://i.pravatar.cc/50?img=${msg.id}" alt="${msg.studentName}" class="rounded-circle">
                            <div class="flex-grow-1 ms-3">
                                <h6>${msg.studentName}</h6>
                                <p class="message-content mb-1">${msg.content}</p>
                                <small class="text-muted">${msg.time}</small>
                            </div>
                            <button class="btn btn-sm ${msg.isRead ? 'btn-success' : 'btn-warning'} status-btn" data-message-id="${msg.id}">
                                ${msg.isRead ? 'ƒê√£ ƒë·ªçc' : 'Ch∆∞a ƒë·ªçc'}
                            </button>
                        </div>
                    </div>
                </div>
            `
        )
        .join("");
}

// Classroom data
const classrooms = [
    {
        id: "writing1",
        title: "Ielts Writing Task 1",
        img: "asset/image/classzoom.jpeg",
    },
    {
        id: "writing2",
        title: "Ielts Writing Task 2",
        img: "asset/image/classzoom.jpeg",
    },
    { id: "reading", title: "Reading", img: "asset/image/classzoom.jpeg" },
    { id: "listening", title: "Listening", img: "asset/image/classzoom.jpeg" },
];

// Sample student data for each classroom with lessons
const studentsByClassroom = {
    writing1: [
        {
            id: 1,
            name: "Nguy·ªÖn VƒÉn A",
            email: "nguyenvana@example.com",
            attendance: "85%",
            grade: "6.5",
            phone: "0912345678",
            address: "123 Nguy·ªÖn Hu·ªá, Qu·∫≠n 1, TP.HCM",
            dateOfBirth: "15/06/2000",
            gender: "Nam",
            registrationDate: "05/01/2023",
            lastLogin: "22/04/2025",
            completedAssignments: 15,
            totalAssignments: 18,
            lessons: [
                {
                    type: "learning",
                    title: "Lesson 1: Introduction to Bar Charts",
                    quizScore: 92,
                },
                {
                    type: "learning",
                    title: "Lesson 2: Describing Trends",
                    quizScore: 88,
                },
                {
                    type: "exam",
                    title: "Lesson 3: Mid-term Test",
                    exam: {
                        examId: 1,
                        title: "Writing Task 1 - Test 1",
                        score: 82,
                        submittedAt: "2025-03-10T14:30:00Z",
                        content: "The bar chart shows the percentage of people using public transport in five different cities in 2020...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskAchievement: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 4: Final Test",
                    exam: {
                        examId: 2,
                        title: "Writing Task 1 - Test 2",
                        score: 75,
                        submittedAt: "2025-03-15T09:00:00Z",
                        content: "The line graph illustrates the number of tourists visiting a particular Caribbean island between 2010 and 2017...",
                        status: "graded",
                        remark: "C·∫ßn c·∫£i thi·ªán ph·∫ßn t·ª´ v·ª±ng v√† c·∫•u tr√∫c c√¢u. B√†i vi·∫øt kh√° m·∫°ch l·∫°c nh∆∞ng c·∫ßn th√™m v√≠ d·ª• c·ª• th·ªÉ.",
                        criteria: {
                            taskAchievement: 7.5,
                            coherenceAndCohesion: 7.0,
                            lexicalResource: 6.5,
                            grammaticalRange: 7.0
                        }
                    }
                },
                {
                    type: "learning",
                    title: "Lesson 5: Advanced Descriptions",
                    quizScore: 91,
                },
                {
                    type: "exam",
                    title: "Lesson 6: Extra Test",
                    exam: {
                        examId: 3,
                        title: "Writing Task 1 - Test 3",
                        score: 88,
                        submittedAt: "2025-03-20T16:45:00Z",
                        content: "The pie chart compares the energy consumption of various sources in a country in 2019...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskAchievement: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 7: Final Assessment",
                    exam: {
                        examId: 4,
                        title: "Writing Task 1 - Test 4",
                        score: 91,
                        submittedAt: "2025-03-25T11:20:00Z",
                        content: "The table provides data on the average hours worked per week in different industries in 2022...",
                        status: "graded",
                        remark: "B√†i vi·∫øt r·∫•t t·ªët, s·ª≠ d·ª•ng t·ª´ v·ª±ng phong ph√∫ v√† c·∫•u tr√∫c c√¢u ƒëa d·∫°ng. C·∫ßn ch√∫ √Ω l·ªói nh·ªè v·ªÅ ch√≠nh t·∫£.",
                        criteria: {
                            taskAchievement: 9.0,
                            coherenceAndCohesion: 8.5,
                            lexicalResource: 8.0,
                            grammaticalRange: 8.5
                        }
                    }
                }
            ],
            notes: "H·ªçc sinh chƒÉm ch·ªâ, c√≥ tinh th·∫ßn h·ªçc t·∫≠p t·ªët. C·∫ßn c·∫£i thi·ªán ph·∫ßn pronunciation.",
        },
        {
            id: 2,
            name: "Tr·∫ßn Th·ªã B",
            email: "tranthib@example.com",
            attendance: "92%",
            grade: "A-",
            phone: "0923456789",
            address: "45 L√™ L·ª£i, Qu·∫≠n 3, TP.HCM",
            dateOfBirth: "22/07/2001",
            gender: "N·ªØ",
            registrationDate: "10/01/2023",
            lastLogin: "23/04/2025",
            completedAssignments: 17,
            totalAssignments: 18,
            lessons: [
                {
                    type: "learning",
                    title: "Lesson 1: Understanding Pie Charts",
                    quizScore: 95,
                },
                {
                    type: "exam",
                    title: "Lesson 2: Mid-term Test",
                    exam: {
                        examId: 1,
                        title: "Writing Task 1 - Test 1",
                        score: 92,
                        submittedAt: "2025-03-10T15:00:00Z",
                        content: "The bar chart illustrates the proportion of students attending extra classes in four subjects...",
                        status: "graded",
                        remark: "B√†i vi·∫øt m·∫°ch l·∫°c, s·ª≠ d·ª•ng t·ª´ v·ª±ng t·ªët. C·∫ßn c·∫£i thi·ªán ph·∫ßn di·ªÖn ƒë·∫°t √Ω t∆∞·ªüng ph·ª©c t·∫°p h∆°n.",
                        criteria: {
                            taskAchievement: 8.5,
                            coherenceAndCohesion: 8.0,
                            lexicalResource: 7.5,
                            grammaticalRange: 8.0
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 3: Progress Test",
                    exam: {
                        examId: 2,
                        title: "Writing Task 1 - Test 2",
                        score: 88,
                        submittedAt: "2025-03-15T10:30:00Z",
                        content: "The line graph shows the trend of urban population growth in three countries from 2000 to 2020...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskAchievement: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                },
                {
                    type: "learning",
                    title: "Lesson 4: Writing Comparisons",
                    quizScore: 90,
                },
                {
                    type: "exam",
                    title: "Lesson 5: Final Test",
                    exam: {
                        examId: 3,
                        title: "Writing Task 1 - Test 3",
                        score: 95,
                        submittedAt: "2025-03-20T14:00:00Z",
                        content: "The pie chart depicts the distribution of water usage in a typical household in 2021...",
                        status: "graded",
                        remark: "B√†i vi·∫øt xu·∫•t s·∫Øc, √Ω t∆∞·ªüng r√µ r√†ng v√† t·ª´ v·ª±ng ƒëa d·∫°ng. Gi·ªØ v·ªØng phong ƒë·ªô!",
                        criteria: {
                            taskAchievement: 9.5,
                            coherenceAndCohesion: 9.0,
                            lexicalResource: 8.5,
                            grammaticalRange: 9.0
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 6: Extra Assessment",
                    exam: {
                        examId: 4,
                        title: "Writing Task 1 - Test 4",
                        score: 89,
                        submittedAt: "2025-03-25T13:15:00Z",
                        content: "The table compares the sales figures of five different products in 2022...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskAchievement: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                }
            ],
            notes: "H·ªçc sinh c√≥ kh·∫£ nƒÉng vi·∫øt t·ªët, c·∫ßn ph√°t huy ƒëi·ªÉm m·∫°nh n√†y trong c√°c b√†i thi.",
        },
        {
            id: 3,
            name: "L√™ Minh C",
            email: "leminhc@example.com",
            attendance: "78%",
            grade: "B",
            phone: "0934567890",
            address: "78 Nguy·ªÖn Du, Qu·∫≠n 5, TP.HCM",
            dateOfBirth: "30/08/1999",
            gender: "Nam",
            registrationDate: "15/01/2023",
            lastLogin: "20/04/2025",
            completedAssignments: 13,
            totalAssignments: 18,
            lessons: [
                {
                    type: "learning",
                    title: "Lesson 1: Basics of Line Graphs",
                    quizScore: 85,
                },
                {
                    type: "exam",
                    title: "Lesson 2: Mid-term Test",
                    exam: {
                        examId: 1,
                        title: "Writing Task 1 - Test 1",
                        score: 76,
                        submittedAt: "2025-03-10T16:00:00Z",
                        content: "The bar chart shows the number of visitors to three museums in a city in 2020...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskAchievement: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 3: Progress Test",
                    exam: {
                        examId: 2,
                        title: "Writing Task 1 - Test 2",
                        score: 82,
                        submittedAt: "2025-03-15T11:00:00Z",
                        content: "The line graph illustrates the changes in electricity consumption in a country from 2015 to 2020...",
                        status: "graded",
                        remark: "B√†i vi·∫øt c√≥ √Ω t∆∞·ªüng t·ªët nh∆∞ng c·∫ßn c·∫£i thi·ªán ph·∫ßn ng·ªØ ph√°p v√† t·ª´ v·ª±ng.",
                        criteria: {
                            taskAchievement: 7.0,
                            coherenceAndCohesion: 6.5,
                            lexicalResource: 6.0,
                            grammaticalRange: 6.5
                        }
                    }
                },
                {
                    type: "learning",
                    title: "Lesson 4: Describing Pie Charts",
                    quizScore: 80,
                },
                {
                    type: "exam",
                    title: "Lesson 5: Final Test",
                    exam: {
                        examId: 3,
                        title: "Writing Task 1 - Test 3",
                        score: 79,
                        submittedAt: "2025-03-20T15:30:00Z",
                        content: "The pie chart shows the proportion of different types of vehicles in a city in 2021...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskAchievement: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 6: Extra Assessment",
                    exam: {
                        examId: 4,
                        title: "Writing Task 1 - Test 4",
                        score: 85,
                        submittedAt: "2025-03-25T12:00:00Z",
                        content: "The table provides information about the average monthly rainfall in three cities in 2022...",
                        status: "graded",
                        remark: "B√†i vi·∫øt kh√° t·ªët, nh∆∞ng c·∫ßn ch√∫ √Ω c√°ch di·ªÖn ƒë·∫°t ƒë·ªÉ tr√°nh l·∫∑p t·ª´.",
                        criteria: {
                            taskAchievement: 8.0,
                            coherenceAndCohesion: 7.5,
                            lexicalResource: 7.0,
                            grammaticalRange: 7.5
                        }
                    }
                }
            ],
            notes: "H·ªçc sinh th∆∞·ªùng xuy√™n ƒëi h·ªçc mu·ªôn, c·∫ßn nh·∫Øc nh·ªü v·ªÅ vi·ªác tham d·ª± ƒë·∫ßy ƒë·ªß.",
        },
    ],
    writing2: [
        {
            id: 4,
            name: "Ph·∫°m VƒÉn D",
            email: "phamvand@example.com",
            attendance: "90%",
            grade: "A",
            phone: "0945678901",
            address: "234 ƒêi·ªán Bi√™n Ph·ªß, Qu·∫≠n B√¨nh Th·∫°nh, TP.HCM",
            dateOfBirth: "12/03/2000",
            gender: "Nam",
            registrationDate: "20/01/2023",
            lastLogin: "21/04/2025",
            completedAssignments: 16,
            totalAssignments: 17,
            lessons: [
                {
                    type: "learning",
                    title: "Lesson 1: Opinion Essays",
                    quizScore: 90,
                },
                {
                    type: "exam",
                    title: "Lesson 2: Mid-term Test",
                    exam: {
                        examId: 1,
                        title: "Writing Task 2 - Test 1",
                        score: 92,
                        submittedAt: "2025-03-12T09:00:00Z",
                        content: "Some people think that the best way to reduce crime is to give longer prison sentences. Others, however, believe there are better alternative ways of reducing crime. Discuss both views and give your opinion.",
                        status: "graded",
                        remark: "B√†i vi·∫øt r·∫•t t·ªët, l·∫≠p lu·∫≠n ch·∫∑t ch·∫Ω v√† t·ª´ v·ª±ng ƒëa d·∫°ng. C·∫ßn ch√∫ √Ω m·ªôt s·ªë l·ªói ng·ªØ ph√°p nh·ªè.",
                        criteria: {
                            taskResponse: 9.0,
                            coherenceAndCohesion: 8.5,
                            lexicalResource: 8.0,
                            grammaticalRange: 8.5
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 3: Progress Test",
                    exam: {
                        examId: 2,
                        title: "Writing Task 2 - Test 2",
                        score: 95,
                        submittedAt: "2025-03-17T14:20:00Z",
                        content: "In some countries, the government spends a large amount of money on arts. Some people believe that this money should be spent on health and education instead. To what extent do you agree or disagree?",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskResponse: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                },
                {
                    type: "learning",
                    title: "Lesson 4: Argumentative Essays",
                    quizScore: 93,
                },
                {
                    type: "exam",
                    title: "Lesson 5: Final Test",
                    exam: {
                        examId: 3,
                        title: "Writing Task 2 - Test 3",
                        score: 90,
                        submittedAt: "2025-03-22T10:30:00Z",
                        content: "Many people believe that social networking sites have a huge negative impact on both individuals and society. To what extent do you agree?",
                        status: "graded",
                        remark: "B√†i vi·∫øt c√≥ l·∫≠p lu·∫≠n r√µ r√†ng, nh∆∞ng c·∫ßn th√™m v√≠ d·ª• c·ª• th·ªÉ ƒë·ªÉ tƒÉng t√≠nh thuy·∫øt ph·ª•c.",
                        criteria: {
                            taskResponse: 8.5,
                            coherenceAndCohesion: 8.0,
                            lexicalResource: 7.5,
                            grammaticalRange: 8.0
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 6: Extra Assessment",
                    exam: {
                        examId: 4,
                        title: "Writing Task 2 - Test 4",
                        score: 94,
                        submittedAt: "2025-03-27T11:45:00Z",
                        content: "Some people think that the best way to increase road safety is to increase the minimum legal age for driving cars or motorbikes. To what extent do you agree or disagree?",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskResponse: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                }
            ],
            notes: "H·ªçc sinh c√≥ kh·∫£ nƒÉng ph√¢n t√≠ch t·ªët, vi·∫øt lu·∫≠n c√≥ chi·ªÅu s√¢u.",
        },
        {
            id: 5,
            name: "Ho√†ng Th·ªã E",
            email: "hoangthie@example.com",
            attendance: "95%",
            grade: "A+",
            phone: "0956789012",
            address: "56 Tr∆∞∆°ng ƒê·ªãnh, Qu·∫≠n 10, TP.HCM",
            dateOfBirth: "25/05/2001",
            gender: "N·ªØ",
            registrationDate: "25/01/2023",
            lastLogin: "23/04/2025",
            completedAssignments: 17,
            totalAssignments: 17,
            lessons: [
                {
                    type: "learning",
                    title: "Lesson 1: Essay Structure",
                    quizScore: 98,
                },
                {
                    type: "exam",
                    title: "Lesson 2: Mid-term Test",
                    exam: {
                        examId: 1,
                        title: "Writing Task 2 - Test 1",
                        score: 98,
                        submittedAt: "2025-03-12T10:00:00Z",
                        content: "Some people believe that children should be allowed to make their own decisions on everyday matters. Others believe that children should follow their parents‚Äô decisions. Discuss both views and give your own opinion.",
                        status: "graded",
                        remark: "B√†i vi·∫øt xu·∫•t s·∫Øc, l·∫≠p lu·∫≠n r·∫•t thuy·∫øt ph·ª•c v√† s·ª≠ d·ª•ng t·ª´ v·ª±ng phong ph√∫. Gi·ªØ v·ªØng phong ƒë·ªô!",
                        criteria: {
                            taskResponse: 9.5,
                            coherenceAndCohesion: 9.0,
                            lexicalResource: 9.0,
                            grammaticalRange: 9.0
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 3: Progress Test",
                    exam: {
                        examId: 2,
                        title: "Writing Task 2 - Test 2",
                        score: 96,
                        submittedAt: "2025-03-17T15:00:00Z",
                        content: "In many countries, the gap between the rich and the poor is increasing. What problems does this cause, and what solutions can you suggest?",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskResponse: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                },
                {
                    type: "learning",
                    title: "Lesson 4: Advanced Essay Writing",
                    quizScore: 97,
                },
                {
                    type: "exam",
                    title: "Lesson 5: Final Test",
                    exam: {
                        examId: 3,
                        title: "Writing Task 2 - Test 3",
                        score: 97,
                        submittedAt: "2025-03-22T11:00:00Z",
                        content: "Some people think that technology has made our lives more complex, while others believe it has made our lives easier. Discuss both views and give your opinion.",
                        status: "graded",
                        remark: "B√†i vi·∫øt r·∫•t ·∫•n t∆∞·ª£ng, l·∫≠p lu·∫≠n ch·∫∑t ch·∫Ω v√† s·ª≠ d·ª•ng ng√¥n ng·ªØ t·ª± nhi√™n. C·∫ßn ch√∫ √Ω m·ªôt s·ªë l·ªói nh·ªè v·ªÅ d·∫•u c√¢u.",
                        criteria: {
                            taskResponse: 9.0,
                            coherenceAndCohesion: 9.0,
                            lexicalResource: 8.5,
                            grammaticalRange: 9.0
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 6: Extra Assessment",
                    exam: {
                        examId: 4,
                        title: "Writing Task 2 - Test 4",
                        score: 99,
                        submittedAt: "2025-03-27T12:30:00Z",
                        content: "Some people believe that the government should provide free healthcare for all citizens. To what extent do you agree or disagree?",
                        status: "pending",
                        remark: "",
                        criteria: {
                            taskResponse: null,
                            coherenceAndCohesion: null,
                            lexicalResource: null,
                            grammaticalRange: null
                        }
                    }
                }
            ],
            notes: "H·ªçc sinh xu·∫•t s·∫Øc, lu√¥n ho√†n th√†nh b√†i t·∫≠p ƒë√∫ng h·∫°n v·ªõi ch·∫•t l∆∞·ª£ng cao.",
        },
    ],
    reading: [
        {
            id: 6,
            name: "ƒê·ªó VƒÉn F",
            email: "dovanf@example.com",
            attendance: "82%",
            grade: "B",
            phone: "0967890123",
            address: "89 C√°ch M·∫°ng Th√°ng 8, Qu·∫≠n 3, TP.HCM",
            dateOfBirth: "18/11/2000",
            gender: "Nam",
            registrationDate: "02/02/2023",
            lastLogin: "19/04/2025",
            completedAssignments: 12,
            totalAssignments: 15,
            lessons: [
                {
                    type: "learning",
                    title: "Lesson 1: Skimming Techniques",
                    quizScore: 78,
                },
                {
                    type: "exam",
                    title: "Lesson 2: Mid-term Test",
                    exam: {
                        examId: 1,
                        title: "Reading Test 1",
                        score: 78,
                        submittedAt: "2025-03-11T13:00:00Z",
                        content: "Answers to Passage 1: True, False, Not Given...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            accuracy: null,
                            speed: null,
                            comprehension: null,
                            vocabularyUsage: null
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 3: Progress Test",
                    exam: {
                        examId: 2,
                        title: "Reading Test 2",
                        score: 85,
                        submittedAt: "2025-03-16T14:00:00Z",
                        content: "Answers to Passage 2: Multiple Choice, Matching Headings...",
                        status: "graded",
                        remark: "C·∫ßn c·∫£i thi·ªán t·ªëc ƒë·ªô ƒë·ªçc v√† ƒë·ªô ch√≠nh x√°c trong ph·∫ßn tr·∫£ l·ªùi c√¢u h·ªèi True/False.",
                        criteria: {
                            accuracy: 7.5,
                            speed: 7.0,
                            comprehension: 7.0,
                            vocabularyUsage: 7.5
                        }
                    }
                },
                {
                    type: "learning",
                    title: "Lesson 4: Scanning Techniques",
                    quizScore: 82,
                },
                {
                    type: "exam",
                    title: "Lesson 5: Final Test",
                    exam: {
                        examId: 3,
                        title: "Reading Test 3",
                        score: 80,
                        submittedAt: "2025-03-21T15:00:00Z",
                        content: "Answers to Passage 3: Sentence Completion, Summary Completion...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            accuracy: null,
                            speed: null,
                            comprehension: null,
                            vocabularyUsage: null
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 6: Extra Assessment",
                    exam: {
                        examId: 4,
                        title: "Reading Test 4",
                        score: 83,
                        submittedAt: "2025-03-26T16:00:00Z",
                        content: "Answers to Passage 4: Matching Information, Yes/No/Not Given...",
                        status: "graded",
                        remark: "H·ªçc sinh c√≥ ti·∫øn b·ªô trong vi·ªác t√¨m th√¥ng tin, nh∆∞ng c·∫ßn ch√∫ √Ω ph·∫ßn t·ª´ v·ª±ng.",
                        criteria: {
                            accuracy: 7.5,
                            speed: 7.5,
                            comprehension: 7.0,
                            vocabularyUsage: 7.0
                        }
                    }
                }
            ],
            notes: "H·ªçc sinh c·∫ßn c·∫£i thi·ªán k·ªπ nƒÉng ƒë·ªçc hi·ªÉu v√† t·ªëc ƒë·ªô ƒë·ªçc.",
        },
        {
            id: 7,
            name: "Ng√¥ Th·ªã G",
            email: "ngothig@example.com",
            attendance: "88%",
            grade: "B+",
            phone: "0978901234",
            address: "123 Hai B√† Tr∆∞ng, Qu·∫≠n 1, TP.HCM",
            dateOfBirth: "07/04/2001",
            gender: "N·ªØ",
            registrationDate: "05/02/2023",
            lastLogin: "22/04/2025",
            completedAssignments: 14,
            totalAssignments: 15,
            lessons: [
                {
                    type: "learning",
                    title: "Lesson 1: Vocabulary Building",
                    quizScore: 85,
                },
                {
                    type: "exam",
                    title: "Lesson 2: Mid-term Test",
                    exam: {
                        examId: 1,
                        title: "Reading Test 1",
                        score: 87,
                        submittedAt: "2025-03-11T14:00:00Z",
                        content: "Answers to Passage 1: True, False, Not Given...",
                        status: "graded",
                        remark: "H·ªçc sinh tr·∫£ l·ªùi ch√≠nh x√°c ph·∫ßn l·ªõn c√¢u h·ªèi, c·∫ßn c·∫£i thi·ªán t·ªëc ƒë·ªô ƒë·ªçc.",
                        criteria: {
                            accuracy: 8.0,
                            speed: 7.5,
                            comprehension: 8.0,
                            vocabularyUsage: 7.5
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 3: Progress Test",
                    exam: {
                        examId: 2,
                        title: "Reading Test 2",
                        score: 84,
                        submittedAt: "2025-03-16T15:00:00Z",
                        content: "Answers to Passage 2: Multiple Choice, Matching Headings...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            accuracy: null,
                            speed: null,
                            comprehension: null,
                            vocabularyUsage: null
                        }
                    }
                },
                {
                    type: "learning",
                    title: "Lesson 4: Reading Strategies",
                    quizScore: 88,
                },
                {
                    type: "exam",
                    title: "Lesson 5: Final Test",
                    exam: {
                        examId: 3,
                        title: "Reading Test 3",
                        score: 88,
                        submittedAt: "2025-03-21T16:00:00Z",
                        content: "Answers to Passage 3: Sentence Completion, Summary Completion...",
                        status: "graded",
                        remark: "H·ªçc sinh l√†m t·ªët ph·∫ßn matching headings, c·∫ßn ch√∫ √Ω ph·∫ßn t·ª´ v·ª±ng.",
                        criteria: {
                            accuracy: 8.5,
                            speed: 8.0,
                            comprehension: 8.0,
                            vocabularyUsage: 7.5
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 6: Extra Assessment",
                    exam: {
                        examId: 4,
                        title: "Reading Test 4",
                        score: 89,
                        submittedAt: "2025-03-26T17:00:00Z",
                        content: "Answers to Passage 4: Matching Information, Yes/No/Not Given...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            accuracy: null,
                            speed: null,
                            comprehension: null,
                            vocabularyUsage: null
                        }
                    }
                }
            ],
            notes: "H·ªçc sinh c√≥ kh·∫£ nƒÉng t√¨m ki·∫øm th√¥ng tin nhanh, c·∫ßn ph√°t tri·ªÉn k·ªπ nƒÉng ƒë·ªçc suy lu·∫≠n.",
        },
    ],
    listening: [
        {
            id: 8,
            name: "V≈© VƒÉn H",
            email: "vuvanh@example.com",
            attendance: "75%",
            grade: "C+",
            phone: "0989012345",
            address: "46 L√Ω Th∆∞·ªùng Ki·ªát, Qu·∫≠n T√¢n B√¨nh, TP.HCM",
            dateOfBirth: "29/09/1999",
            gender: "Nam",
            registrationDate: "10/02/2023",
            lastLogin: "15/04/2025",
            completedAssignments: 10,
            totalAssignments: 16,
            lessons: [
                {
                    type: "learning",
                    title: "Lesson 1: Listening for Details",
                    quizScore: 70,
                },
                {
                    type: "exam",
                    title: "Lesson 2: Mid-term Test",
                    exam: {
                        examId: 1,
                        title: "Listening Test 1",
                        score: 72,
                        submittedAt: "2025-03-13T09:00:00Z",
                        content: "Answers: 1. John Smith, 2. 25th April, 3. 123-456-7890...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            comprehension: null,
                            recognition: null,
                            accuracy: null,
                            attentionToDetail: null
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 3: Progress Test",
                    exam: {
                        examId: 2,
                        title: "Listening Test 2",
                        score: 68,
                        submittedAt: "2025-03-18T10:00:00Z",
                        content: "Answers: 1. Library, 2. 10:30 AM, 3. Book Club...",
                        status: "graded",
                        remark: "C·∫ßn c·∫£i thi·ªán kh·∫£ nƒÉng nh·∫≠n di·ªán t·ª´ kh√≥a v√† t·∫≠p trung v√†o chi ti·∫øt.",
                        criteria: {
                            comprehension: 6.5,
                            recognition: 6.0,
                            accuracy: 6.0,
                            attentionToDetail: 6.0
                        }
                    }
                },
                {
                    type: "learning",
                    title: "Lesson 4: Listening for Main Ideas",
                    quizScore: 72,
                },
                {
                    type: "exam",
                    title: "Lesson 5: Final Test",
                    exam: {
                        examId: 3,
                        title: "Listening Test 3",
                        score: 75,
                        submittedAt: "2025-03-23T11:00:00Z",
                        content: "Answers: 1. Sydney, 2. 3rd May, 3. 987-654-3210...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            comprehension: null,
                            recognition: null,
                            accuracy: null,
                            attentionToDetail: null
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 6: Extra Assessment",
                    exam: {
                        examId: 4,
                        title: "Listening Test 4",
                        score: 78,
                        submittedAt: "2025-03-28T12:00:00Z",
                        content: "Answers: 1. Museum, 2. 2:00 PM, 3. History Tour...",
                        status: "graded",
                        remark: "H·ªçc sinh c√≥ ti·∫øn b·ªô, nh∆∞ng c·∫ßn luy·ªán nghe v·ªõi accent kh√°c nhau.",
                        criteria: {
                            comprehension: 7.0,
                            recognition: 6.5,
                            accuracy: 6.5,
                            attentionToDetail: 7.0
                        }
                    }
                }
            ],
            notes: "H·ªçc sinh g·∫∑p kh√≥ khƒÉn v·ªõi accent c·ªßa ng∆∞·ªùi b·∫£n x·ª©, c·∫ßn th√™m th·ªùi gian luy·ªán t·∫≠p.",
        },
        {
            id: 9,
            name: "Mai Th·ªã I",
            email: "maithii@example.com",
            attendance: "93%",
            grade: "A-",
            phone: "0990123456",
            address: "78 Nguy·ªÖn Th·ªã Minh Khai, Qu·∫≠n 3, TP.HCM",
            dateOfBirth: "14/02/2000",
            gender: "N·ªØ",
            registrationDate: "15/02/2023",
            lastLogin: "23/04/2025",
            completedAssignments: 15,
            totalAssignments: 16,
            lessons: [
                {
                    type: "learning",
                    title: "Lesson 1: Listening for Numbers",
                    quizScore: 88,
                },
                {
                    type: "exam",
                    title: "Lesson 2: Mid-term Test",
                    exam: {
                        examId: 1,
                        title: "Listening Test 1",
                        score: 90,
                        submittedAt: "2025-03-13T10:00:00Z",
                        content: "Answers: 1. Anna Brown, 2. 15th June, 3. 456-789-1234...",
                        status: "graded",
                        remark: "H·ªçc sinh l√†m r·∫•t t·ªët, nh·∫≠n di·ªán t·ª´ kh√≥a ch√≠nh x√°c.",
                        criteria: {
                            comprehension: 8.5,
                            recognition: 8.0,
                            accuracy: 8.0,
                            attentionToDetail: 8.5
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 3: Progress Test",
                    exam: {
                        examId: 2,
                        title: "Listening Test 2",
                        score: 93,
                        submittedAt: "2025-03-18T11:00:00Z",
                        content: "Answers: 1. Park, 2. 9:00 AM, 3. Yoga Class...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            comprehension: null,
                            recognition: null,
                            accuracy: null,
                            attentionToDetail: null
                        }
                    }
                },
                {
                    type: "learning",
                    title: "Lesson 4: Listening for Specific Information",
                    quizScore: 90,
                },
                {
                    type: "exam",
                    title: "Lesson 5: Final Test",
                    exam: {
                        examId: 3,
                        title: "Listening Test 3",
                        score: 88,
                        submittedAt: "2025-03-23T12:00:00Z",
                        content: "Answers: 1. London, 2. 10th July, 3. 321-654-9876...",
                        status: "graded",
                        remark: "H·ªçc sinh l√†m t·ªët, nh∆∞ng c·∫ßn ch√∫ √Ω ph·∫ßn chi ti·∫øt nh·ªè nh∆∞ s·ªë ƒëi·ªán tho·∫°i.",
                        criteria: {
                            comprehension: 8.0,
                            recognition: 8.0,
                            accuracy: 7.5,
                            attentionToDetail: 8.0
                        }
                    }
                },
                {
                    type: "exam",
                    title: "Lesson 6: Extra Assessment",
                    exam: {
                        examId: 4,
                        title: "Listening Test 4",
                        score: 91,
                        submittedAt: "2025-03-28T13:00:00Z",
                        content: "Answers: 1. Cinema, 2. 7:00 PM, 3. Movie Night...",
                        status: "pending",
                        remark: "",
                        criteria: {
                            comprehension: null,
                            recognition: null,
                            accuracy: null,
                            attentionToDetail: null
                        }
                    }
                }
            ],
            notes: "H·ªçc sinh c√≥ kh·∫£ nƒÉng nghe t·ªët, ƒë·∫∑c bi·ªát l√† ph√¢n bi·ªát c√°c accent kh√°c nhau.",
        },
    ],
};

// H√†m l∆∞u ƒëi·ªÉm v√† nh·∫≠n x√©t
function saveRemark(studentId, classroomId, examId) {
    const student = studentsByClassroom[classroomId].find(s => s.id === studentId);
    const lesson = student.lessons.find(l => l.exam && l.exam.examId === examId);
    const exam = lesson ? lesson.exam : null;

    if (!exam) return;

    // L·∫•y gi√° tr·ªã t·ª´ c√°c input
    const taskAchievement = parseFloat(document.getElementById(`taskAchievement-${examId}`).value);
    const coherenceAndCohesion = parseFloat(document.getElementById(`coherenceAndCohesion-${examId}`).value);
    const lexicalResource = parseFloat(document.getElementById(`lexicalResource-${examId}`).value);
    const grammaticalRange = parseFloat(document.getElementById(`grammaticalRange-${examId}`).value);
    const remark = document.getElementById(`remark-${examId}`).value;

    // T√≠nh ƒëi·ªÉm trung b√¨nh
    const newScore = (taskAchievement + coherenceAndCohesion + lexicalResource + grammaticalRange) / 4;

    // C·∫≠p nh·∫≠t d·ªØ li·ªáu
    exam.criteria.taskAchievement = exam.criteria.taskAchievement !== undefined ? taskAchievement : null;
    exam.criteria.taskResponse = exam.criteria.taskResponse !== undefined ? taskAchievement : null;
    exam.criteria.coherenceAndCohesion = coherenceAndCohesion;
    exam.criteria.lexicalResource = lexicalResource;
    exam.criteria.grammaticalRange = grammaticalRange;
    exam.score = Math.round(newScore * 10); // Quy ƒë·ªïi ƒëi·ªÉm sang thang 100
    exam.remark = remark;
    exam.status = "graded";

    // C·∫≠p nh·∫≠t giao di·ªán
    showStudentDetails(studentId, classroomId);

    // ƒê√≥ng modal
    const modal = bootstrap.Modal.getInstance(document.getElementById(`remarkModal-${examId}`));
    modal.hide();

    // Hi·ªÉn th·ªã th√¥ng b√°o
    showNotification("ƒê√£ l∆∞u nh·∫≠n x√©t v√† ƒëi·ªÉm s·ªë!", "success", 3000);
}

// Show student cards for a specific classroom
function showClassroomStudents(classroomId) {
    document.getElementById("classroomListContainer").classList.add("d-none");
    document.getElementById("studentTableContainer").classList.remove("d-none");

    const classroom = classrooms.find((c) => c.id === classroomId);
    const students = studentsByClassroom[classroomId];

    document.getElementById(
        "selectedClassroomTitle"
    ).textContent = `${classroom.title} - Danh s√°ch h·ªçc vi√™n`;

    let cardsHtml = "";
    students.forEach((student) => {
        const avatarUrl = `https://i.pravatar.cc/100?img=${student.id + 10}`;
        cardsHtml += `
            <div class="col-md-3 mb-4">
                <div class="card student-card text-center p-3" onclick="showStudentDetails(${student.id}, '${classroomId}')">
                    <div class="text-center mb-3">
                        <img src="${avatarUrl}" alt="${student.name}" class="img-fluid" style="max-width: 80px; border-radius: 50%;">
                    </div>
                    <h5>${student.name}</h5>
                    <p class="text-muted small">${student.email}</p>
                    <div class="d-flex justify-content-between mt-2">
                        <span class="badge bg-info">Tham gia: ${student.attendance}</span>
                        <span class="badge bg-success">ƒêi·ªÉm: ${student.grade}</span>
                    </div>
                </div>
            </div>
            `;
    });

    document.getElementById("studentCardContainer").innerHTML = cardsHtml;

    document.querySelectorAll(".student-card").forEach((card) => {
        card.style.transition = "transform 0.3s ease, box-shadow 0.3s ease";
        card.style.cursor = "pointer";

        card.addEventListener("mouseenter", () => {
            card.style.transform = "translateY(-5px)";
            card.style.boxShadow = "0 10px 20px rgba(0,0,0,0.1)";
        });

        card.addEventListener("mouseleave", () => {
            card.style.transform = "translateY(0)";
            card.style.boxShadow = "none";
        });
    });
}

// Go back to classroom list
function backToClassrooms() {
    document.getElementById("classroomListContainer").classList.remove("d-none");
    document.getElementById("studentTableContainer").classList.add("d-none");
    document.getElementById("studentDetailContainer")?.classList.add("d-none");
}

// H√†m hi·ªÉn th·ªã modal ch·∫•m b√†i
function showRemarkModal(studentId, classroomId, examId) {
    const student = studentsByClassroom[classroomId].find(s => s.id === studentId);
    const lesson = student.lessons.find(l => l.exam && l.exam.examId === examId);
    const exam = lesson ? lesson.exam : null;

    if (!exam) return;

    const modalHTML = `
        <div class="modal fade" id="remarkModal-${examId}" tabindex="-1" aria-labelledby="remarkModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="remarkModalLabel">Ch·∫•m b√†i: ${exam.title}</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p><strong>H·ªçc sinh:</strong> ${student.name}</p>
                        <p><strong>Ng√†y n·ªôp:</strong> ${new Date(exam.submittedAt).toLocaleString('vi-VN')}</p>
                        <p><strong>N·ªôi dung b√†i l√†m:</strong></p>
                        <p class="border p-3 bg-light">${exam.content}</p>
                        <h6>ƒêi·ªÉm chi ti·∫øt:</h6>
                        <div class="mb-3">
                            <label class="form-label">Task Achievement / Task Response:</label>
                            <input type="number" class="form-control" id="taskAchievement-${examId}" value="${exam.criteria.taskAchievement || exam.criteria.taskResponse || ''}" min="0" max="9" step="0.5">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Coherence and Cohesion:</label>
                            <input type="number" class="form-control" id="coherenceAndCohesion-${examId}" value="${exam.criteria.coherenceAndCohesion || ''}" min="0" max="9" step="0.5">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Lexical Resource:</label>
                            <input type="number" class="form-control" id="lexicalResource-${examId}" value="${exam.criteria.lexicalResource || ''}" min="0" max="9" step="0.5">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Grammatical Range and Accuracy:</label>
                            <input type="number" class="form-control" id="grammaticalRange-${examId}" value="${exam.criteria.grammaticalRange || ''}" min="0" max="9" step="0.5">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nh·∫≠n x√©t:</label>
                            <textarea class="form-control" id="remark-${examId}" rows="3">${exam.remark}</textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
                        <button type="button" class="btn btn-primary" onclick="saveRemark(${studentId}, '${classroomId}', ${examId})">L∆∞u</button>
                    </div>
                </div>
            </div>
        </div>
    `;

    // Th√™m modal v√†o body
    document.body.insertAdjacentHTML('beforeend', modalHTML);

    // Hi·ªÉn th·ªã modal
    const modal = new bootstrap.Modal(document.getElementById(`remarkModal-${examId}`));
    modal.show();
}


// Load classroom section with clickable cards
function loadClassroomSection() {
    let html = `
        <div id="classroomListContainer">
            <h2>Classroom</h2>
            <div class="row mt-4">
        `;

    classrooms.forEach((classroom) => {
        html += `
            <div class="col-md-3">
                <div class="card text-center p-3 mb-4 classroom-card" onclick="showClassroomStudents('${classroom.id}')">
                    <div class="text-center mb-3">
                        <img src="${classroom.img}" alt="${classroom.title}" class="img-fluid" style="max-width: 100px; border-radius: 8px;">
                    </div>
                    <h4>${classroom.title}</h4>
                </div>
            </div>
            `;
    });

    html += `
            </div>
        </div>
        <div id="studentTableContainer" class="d-none">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3 id="selectedClassroomTitle"></h3>
                <button class="btn btn-outline-secondary" onclick="backToClassrooms()">
                    <i class="fas fa-arrow-left"></i> Quay l·∫°i
                </button>
            </div>
            <div id="studentCardContainer" class="row">
            </div>
        </div>`;

    document.getElementById("dynamicContent").innerHTML = html;

    // Add hover effect to classroom cards
    document.querySelectorAll(".classroom-card").forEach((card) => {
        card.style.cursor = "pointer";
        card.style.transition = "transform 0.3s ease, box-shadow 0.3s ease";

        card.addEventListener("mouseenter", () => {
            card.style.transform = "translateY(-5px)";
            card.style.boxShadow = "0 10px 20px rgba(0,0,0,0.1)";
        });

        card.addEventListener("mouseleave", () => {
            card.style.transform = "translateY(0)";
            card.style.boxShadow = "none";
        });
    });
}
// S·ª≠a h√†m showStudentDetails ƒë·ªÉ hi·ªÉn th·ªã d·ªØ li·ªáu theo c·∫•u tr√∫c m·ªõi
function showStudentDetails(studentId, classroomId) {
    const student = studentsByClassroom[classroomId].find(
        (s) => s.id === studentId
    );
    if (!student) return;

    let detailContainer = document.getElementById("studentDetailContainer");
    if (!detailContainer) {
        detailContainer = document.createElement("div");
        detailContainer.id = "studentDetailContainer";
        detailContainer.className = "mt-4";
        document.getElementById("dynamicContent").appendChild(detailContainer);
    }

    document.getElementById("studentTableContainer").classList.add("d-none");
    detailContainer.classList.remove("d-none");

    // L·ªçc c√°c b√†i ki·ªÉm tra (exams) t·ª´ c√°c lesson ki·ªÉm tra
    const exams = student.lessons
        .filter(lesson => lesson.type === "exam" && lesson.exam)
        .map(lesson => lesson.exam);

    // T√≠nh ƒëi·ªÉm trung b√¨nh c·ªßa c√°c b√†i ki·ªÉm tra
    const avgExamScore = exams.length > 0
        ? exams.reduce((sum, exam) => sum + exam.score, 0) / exams.length
        : 0;

    // L·ªçc c√°c ƒëi·ªÉm quiz t·ª´ c√°c lesson h·ªçc
    const quizScores = student.lessons
        .filter(lesson => lesson.type === "learning" && lesson.quizScore !== undefined)
        .map(lesson => lesson.quizScore);

    // T√≠nh ƒëi·ªÉm trung b√¨nh quiz
    const avgQuizScore = quizScores.length > 0
        ? quizScores.reduce((a, b) => a + b, 0) / quizScores.length
        : 0;

    // T·∫°o HTML cho b·∫£ng ƒëi·ªÉm ki·ªÉm tra
    const examScoresHtml = exams.map((exam, index) => `
        <tr>
            <td class="text-center">${index + 1}</td>
            <td>${exam.title}</td>
            <td class="text-center">${new Date(exam.submittedAt).toLocaleDateString('vi-VN')}</td>
            <td class="text-center">${exam.score}/100</td>
            <td class="text-center">${exam.status === "graded" ? "ƒê√£ ch·∫•m" : "Ch∆∞a ch·∫•m"}</td>
            <td class="text-center">
                <button class="btn btn-sm btn-primary remark-btn" onclick="showRemarkModal(${student.id}, '${classroomId}', ${exam.examId})">
                    ${exam.status === "graded" ? "Xem/S·ª≠a" : "Ch·∫•m b√†i"}
                </button>
            </td>
        </tr>
    `).join("");

    const detailsHtml = `
        <div class="container">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3>Th√¥ng tin chi ti·∫øt h·ªçc vi√™n</h3>
                <button class="btn btn-outline-secondary" onclick="backToStudentList('${classroomId}')">
                    <i class="fas fa-arrow-left"></i> Quay l·∫°i 
                </button>
            </div>
            
            <div class="row">
                <div class="col-md-4">
                    <div class="card mb-4"> 
                        <div class="card-body text-center">
                            <img src="https://i.pravatar.cc/150?img=${student.id + 10}" alt="${student.name}" class="img-fluid rounded-circle mb-3" style="width: 150px;">
                            <h3>${student.name}</h3>
                            <p class="text-muted">${student.email}</p>
                            <p><i class="fas fa-phone me-2"></i>${student.phone}</p>
                            <div class="d-flex justify-content-center mt-3">
                                <span class="badge bg-info me-2 p-2">Tham gia: ${student.attendance}</span>
                                <span class="badge bg-success p-2">ƒêi·ªÉm: ${student.grade}</span>
                            </div>
                        </div>
                    </div>    
                    
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5>Ti·∫øn ƒë·ªô h·ªçc t·∫≠p</h5>
                        </div>
                        <div class="card-body">
                            <div class="progress mb-3" style="height: 30px;">
                                <div class="progress-bar bg-success" 
                                    role="progressbar" 
                                    style="width: ${(student.completedAssignments / student.totalAssignments) * 100}%;" 
                                    aria-valuenow="${student.completedAssignments}" 
                                    aria-valuemin="0" 
                                    aria-valuemax="${student.totalAssignments}">
                                    ${student.completedAssignments}/${student.totalAssignments} b√†i t·∫≠p
                                </div>
                            </div>
                            <div class="progress" style="height: 30px;">
                                <div class="progress-bar bg-info" 
                                    role="progressbar" 
                                    style="width: ${student.attendance.replace("%", "")}%;" 
                                    aria-valuenow="${student.attendance.replace("%", "")}" 
                                    aria-valuemin="0" 
                                    aria-valuemax="100">
                                    Tham gia: ${student.attendance}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-8">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5>Th√¥ng tin c√° nh√¢n</h5>
                        </div>
                        <div class="card-body">
                            <table class="table table-striped">
                                <tbody>
                                    <tr><td><strong>H·ªç v√† t√™n:</strong></td><td>${student.name}</td></tr>
                                    <tr><td><strong>Ng√†y sinh:</strong></td><td>${student.dateOfBirth}</td></tr>
                                    <tr><td><strong>Gi·ªõi t√≠nh:</strong></td><td>${student.gender}</td></tr>
                                    <tr><td><strong>ƒê·ªãa ch·ªâ:</strong></td><td>${student.address}</td></tr>
                                    <tr><td><strong>Email:</strong></td><td>${student.email}</td></tr>
                                    <tr><td><strong>S·ªë ƒëi·ªán tho·∫°i:</strong></td><td>${student.phone}</td></tr>
                                    <tr><td><strong>Ng√†y tham gia:</strong></td><td>${student.registrationDate}</td></tr>
                                    <tr><td><strong>ƒêƒÉng nh·∫≠p g·∫ßn ƒë√¢y:</strong></td><td>${student.lastLogin}</td></tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card mb-4">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5>ƒêi·ªÉm ki·ªÉm tra</h5>
                                    <button class="btn btn-primary btn-sm" onclick="window.showExamList(${student.id}, '${classroomId}')">
                                        <i class="fas fa-file-alt me-1"></i> Xem b√†i ki·ªÉm tra
                                    </button>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover exam-table">
                                            <thead>
                                                <tr>
                                                    <th class="text-center" style="width: 5%;">#</th>
                                                    <th style="width: 40%;">T√™n b√†i ki·ªÉm tra</th>
                                                    <th class="text-center" style="width: 15%;">Ng√†y n·ªôp</th>
                                                    <th class="text-center" style="width: 10%;">ƒêi·ªÉm</th>
                                                    <th class="text-center" style="width: 15%;">Tr·∫°ng th√°i</th>
                                                    <th class="text-center" style="width: 15%;">H√†nh ƒë·ªông</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                ${examScoresHtml}
                                                <tr>
                                                    <td class="text-center"><strong>TB:</strong></td>
                                                    <td colspan="5"><strong>${avgExamScore.toFixed(1)}/100</strong></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h5>ƒêi·ªÉm trung b√¨nh quiz</h5>
                                </div>
                                <div class="card-body">
                                    <table class="table table-striped">
                                        <tbody>
                                            <tr>
                                                <td class="text-start" style="font-weight: bold;">ƒêi·ªÉm trung b√¨nh quiz:</td>
                                                <td class="text-end" style="font-weight: bold;">${avgQuizScore.toFixed(1)}/100</td>
                                            </tr>
                                        </tbody>
                                    </table>  
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h5>Ghi ch√∫</h5>
                                </div>
                                <div class="card-body">
                                    <p class="text-muted">${student.notes}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <style>
            .exam-table {
                width: 100%;
                table-layout: fixed;
                font-family: 'Roboto', sans-serif;
            }
            .exam-table th, .exam-table td {
                padding: 12px 8px;
                vertical-align: middle;
                border-bottom: 1px solid #dee2e6;
            }
            .exam-table th {
                background-color: #f8f9fa;
                font-weight: 600;
                color: #495057;
            }
            .exam-table tbody tr:hover {
                background-color: #f1f3f5;
            }
            .exam-table .remark-btn {
                width: 100px;
                padding: 6px 12px;
                font-size: 14px;
                white-space: nowrap;
            }
            .card-header {
                background-color: #f8f9fa;
                border-bottom: 1px solid #dee2e6;
            }
            .table-responsive {
                overflow-x: auto;
            }
            .card-body {
                padding: 20px;
            }
        </style>
    `;

    detailContainer.innerHTML = detailsHtml;
}

// Go back from student details to student list
function backToStudentList(classroomId) {
    document.getElementById("studentTableContainer").classList.remove("d-none");
    document.getElementById("studentDetailContainer").classList.add("d-none");
}

// Danh s√°ch kh√≥a h·ªçc (Demo)
const courses = [
    {
        img: "component/course.jpg",
        name: "JavaScript Basics",
        category: "Programming",
        students: 1200,
    },
    {
        img: "component/course.jpg",
        name: "HTML & CSS Mastery",
        category: "Web Design",
        students: 900,
    },
    {
        img: "component/course.jpg",
        name: "ReactJS for Beginners",
        category: "Frontend",
        students: 1500,
    },
    {
        img: "component/course.jpg",
        name: "Python Data Science",
        category: "Data Science",
        students: 1300,
    },
];

// Th√™m v√†o cu·ªëi file script.js
function prepareAndShowClassroom(classroomId) {
    document.getElementById("homePage").classList.add("d-none");
    document.getElementById("dynamicContent").classList.remove("d-none");
    loadClassroomSection();
    setTimeout(() => {
        showClassroomStudents(classroomId);
    }, 100);
}

// Render danh s√°ch kh√≥a h·ªçc
function loadCourses() {
    let courseList = document.getElementById("courseList");
    courseList.innerHTML = "";
    courses.forEach((course) => {
        let courseHTML = `
            <div class="col-md-3">
                <div class="card course-card p-3">
                    <img src="${course.img}" class="course-img">
                    <h5 class="mt-2">${course.name}</h5>
                    <p class="course-category">${course.category}</p>
                    <p class="course-students">${course.students} h·ªçc vi√™n</p>
                </div>
            </div>
        `;
        courseList.innerHTML += courseHTML;
    });
}

// Load home page khi trang m·ªü v√† th√™m s·ª± ki·ªán cho n√∫t chu√¥ng
document.addEventListener("DOMContentLoaded", () => {
    loadHome();
    const notificationBell = document.querySelector('.btn.btn-light.position-relative');
    if (notificationBell) {
        updateNotificationBadge();
        notificationBell.addEventListener('click', () => {
            showContent('newMessage');
        });
    }
});