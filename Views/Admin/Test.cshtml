@{
    Layout = "~/Views/Shared/Admin.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>ChatBot Interface</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* Style cho table */
        .data-table {
            width: 100%;
            border-collapse: collapse;
            margin: 10px 0;
            background: white;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

            .data-table th, .data-table td {
                padding: 12px;
                border: 1px solid #ddd;
                text-align: left;
            }

            .data-table th {
                background-color: #f5f5f5;
                font-weight: bold;
            }

            .data-table tr:nth-child(even) {
                background-color: #f9f9f9;
            }

        /* Style cho message */
        .message {
            margin: 10px 0;
            padding: 10px;
            border-radius: 8px;
        }

        .user {
            background-color: #007bff;
            color: white;
            margin-left: 20%;
        }

        .ai {
            background-color: #f8f9fa;
            margin-right: 20%;
        }

        /* Style cho chart */
        .chart-container {
            margin: 15px 0;
            padding: 15px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <div class="AIcontainer">
        <h1 class="main-title">Chat AI Example</h1>
        <div class="chat-container">
            <div class="chat-title">Chat với AI</div>

            <!-- Khu vực hiển thị tin nhắn -->
            <div class="chat-messages" id="chatMessages">
                <div class="message user">Xin chào AI!</div>
                <div class="message ai">Chào bạn! Mình có thể giúp gì cho bạn hôm nay?</div>
            </div>

            <div class="input-with-button">
                <input type="text"
                       id="userInput"
                       placeholder="What's your mind..." />
                <button id="sendBtn" onclick="sendMessage()">
                    ➤
                </button>
            </div>
        </div>
    </div>

    <script>
        // Hàm lấy giá trị từ response của AI
        function getValueFromResponse(response, key) {
            const regex = new RegExp(`<${key}>:\\s*\\[(.*?)\\]`);
            const match = response.match(regex);
            return match ? match[1] : '';
        }

        // Hàm tạo table HTML
        function createTableHtml(columns, data) {
            const tableHtml = `
                <table class="data-table">
                    <thead>
                        <tr>
                            ${columns.split(',').map(col => `<th>${col.trim()}</th>`).join('')}
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            ${data.split(',').map(cell => `<td>${cell.trim()}</td>`).join('')}
                        </tr>
                    </tbody>
                </table>
            `;
            return tableHtml;
        }

        // Hàm tạo chart
        function createChart(chartContainer, columns, data) {
            const ctx = document.createElement('canvas');
            chartContainer.appendChild(ctx);

            new Chart(ctx, {
                type: 'bar', // hoặc type khác tùy nhu cầu
                data: {
                    labels: columns.split(',').map(col => col.trim()),
                    datasets: [{
                        label: 'Data',
                        data: data.split(',').map(val => Number(val.trim())),
                        backgroundColor: 'rgba(0, 123, 255, 0.5)'
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Data Visualization'
                        }
                    }
                }
            });
        }

        async function sendMessage() {
            const question = document.getElementById("userInput").value.trim();
            if (!question) {
                alert("Please enter a question.");
                return;
            }

            try {
                const response = await fetch("/api/chat/message", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ message: question })
                });

                if (!response.ok) {
                    throw new Error(`Server returned ${response.status}`);
                }

                const result = await response.json();
                const chat = document.getElementById("chatMessages");

                // Thêm tin nhắn người dùng
                chat.innerHTML += `
                    <div class="message user">
                        <strong>You:</strong> ${question}
                    </div>
                `;

                // Thêm tin nhắn AI
                const aiMessage = document.createElement('div');
                aiMessage.className = 'message ai';

                // Thêm text message
                const messageText = getValueFromResponse(result.message, 'Message');
                aiMessage.innerHTML = `<div><strong>Bot:</strong> ${messageText}</div>`;

                // Kiểm tra và thêm table nếu có
                const canCreateTable = getValueFromResponse(result.message, 'CanCreateTable');
                const preferTable = getValueFromResponse(result.message, 'PreferTableorchart');
                if (canCreateTable === 'Yes' && preferTable === 'Table') {
                    const columns = getValueFromResponse(result.message, 'Column');
                    const data = getValueFromResponse(result.message, 'Data');
                    if (columns && data) {
                        aiMessage.innerHTML += createTableHtml(columns, data);
                    }
                }

                // Kiểm tra và thêm chart nếu có
                const chartType = getValueFromResponse(result.message, 'ChartType');
                if (chartType && chartType !== 'No') {
                    const chartContainer = document.createElement('div');
                    chartContainer.className = 'chart-container';
                    const columns = getValueFromResponse(result.message, 'Column');
                    const data = getValueFromResponse(result.message, 'Data');
                    if (columns && data) {
                        aiMessage.appendChild(chartContainer);
                        createChart(chartContainer, columns, data);
                    }
                }

                chat.appendChild(aiMessage);
                chat.scrollTop = chat.scrollHeight;
                document.getElementById("userInput").value = '';

            } catch (err) {
                console.error(err);
                alert("Có lỗi xảy ra khi gửi câu hỏi.");
            }
        }

        // Thêm event listener cho phím Enter
        document.getElementById("userInput").addEventListener("keypress", function(event) {
            if (event.key === "Enter") {
                event.preventDefault();
                sendMessage();
            }
        });
    </script>
</body>
</html>