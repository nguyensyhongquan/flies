// <auto-generated />
using System;
using FliesProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FliesProject.Migrations
{
    [DbContext(typeof(FiliesContext))]
    partial class FiliesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseQuiz", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("quiz_id");

                    b.HasKey("CourseId", "QuizId")
                        .HasName("PK__course_q__5DC9F290822D7D88");

                    b.HasIndex("QuizId");

                    b.ToTable("course_quizzes", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.Certificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("certificate_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                    b.Property<string>("CertificateCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("certificate_code");

                    b.Property<int>("EnrollementId")
                        .HasColumnType("int")
                        .HasColumnName("enrollement_id");

                    b.Property<DateTime?>("IssuedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("issued_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("pending")
                        .HasColumnName("status");

                    b.HasKey("CertificateId")
                        .HasName("PK__certific__E2256D31A590BF5D");

                    b.HasIndex("EnrollementId");

                    b.HasIndex(new[] { "CertificateCode" }, "UQ__certific__2283DB56680C4652")
                        .IsUnique();

                    b.ToTable("certificates", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CoursesPicture")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("courses_picture");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<int?>("Timelimit")
                        .HasColumnType("int")
                        .HasColumnName("timelimit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__8F1EF7AEF665063E");

                    b.HasIndex("CreatedBy");

                    b.HasIndex(new[] { "Title" }, "UQ__Courses__E52A1BB3465A0473")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FliesProject.Models.CourseTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("transaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("EnrollementId")
                        .HasColumnType("int")
                        .HasColumnName("enrollement_id");

                    b.Property<DateTime?>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("transaction_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("transaction_type");

                    b.HasKey("TransactionId")
                        .HasName("PK__course_t__85C600AF9A588E4E");

                    b.HasIndex("EnrollementId");

                    b.ToTable("course_transactions", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.Enrollement", b =>
                {
                    b.Property<int>("EnrollementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("enrollement_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollementId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("LimitedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("limited_at")
                        .HasDefaultValueSql("(dateadd(week,(10),getdate()))");

                    b.Property<int>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("mentor_id");

                    b.Property<DateTime?>("StartedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("started_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("active")
                        .HasColumnName("status");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.HasKey("EnrollementId")
                        .HasName("PK__enrollem__DD53F5C65C591217");

                    b.HasIndex("CourseId");

                    b.HasIndex("MentorId");

                    b.HasIndex("StudentId");

                    b.ToTable("enrollements", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lesson_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("video_url");

                    b.HasKey("LessonId")
                        .HasName("PK__Lessons__6421F7BE3D82A984");

                    b.HasIndex("SectionId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("FliesProject.Models.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quiz_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsFree")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_free");

                    b.Property<string>("MediaUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("media_url");

                    b.Property<decimal?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("price");

                    b.Property<string>("QuizType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("quiz_type");

                    b.Property<int?>("TimeLimit")
                        .HasColumnType("int")
                        .HasColumnName("time_limit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("title");

                    b.HasKey("QuizId")
                        .HasName("PK__quizzes__2D7053EC4DF61765");

                    b.ToTable("quizzes", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.QuizAnswer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("answer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("answer_text");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit")
                        .HasColumnName("is_correct");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.HasKey("AnswerId")
                        .HasName("PK__quiz_ans__3372431828929A23");

                    b.HasIndex("QuestionId");

                    b.ToTable("quiz_answers", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.QuizComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("comment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("comment_text");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_comment_id");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("quiz_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CommentId")
                        .HasName("PK__quiz_com__E7957687EBCCD996");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("QuizId");

                    b.HasIndex("UserId");

                    b.ToTable("quiz_comments", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.QuizQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MediaUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("media_url");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("question_text");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("question_type");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("quiz_id");

                    b.HasKey("QuestionId")
                        .HasName("PK__quiz_que__2EC21549F2CA8ABD");

                    b.HasIndex("QuizId");

                    b.ToTable("quiz_questions", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.QuizTransaction", b =>
                {
                    b.Property<int>("QuiztransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("quiztransaction_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuiztransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("amount");

                    b.Property<int>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("quiz_id");

                    b.Property<DateTime?>("TransactionDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("transaction_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("QuiztransactionId")
                        .HasName("PK__quiz_tra__6BB96EFAB4B23D22");

                    b.HasIndex("QuizId");

                    b.HasIndex("UserId");

                    b.ToTable("quiz_transactions", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.QuizWritingSample", b =>
                {
                    b.Property<int>("SampleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sample_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SampleId"));

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.Property<string>("SampleAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sample_answer");

                    b.HasKey("SampleId")
                        .HasName("PK__quiz_wri__84ACF7BA9223C9E4");

                    b.HasIndex("QuestionId");

                    b.ToTable("quiz_writing_samples", (string)null);
                });

            modelBuilder.Entity("FliesProject.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("section_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int?>("Positition")
                        .HasColumnType("int")
                        .HasColumnName("positition");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.HasKey("SectionId")
                        .HasName("PK__Sections__F842676A9F6AE810");

                    b.HasIndex("CourseId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("FliesProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("avatar_url");

                    b.Property<decimal?>("Balance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0.00m);

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fullname");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("Passwordhash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("passwordhash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("active");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370FA027A31E");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E6164AA7705F0")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FliesProject.Models.UserCourseProgress", b =>
                {
                    b.Property<int>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("progress_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressId"));

                    b.Property<int?>("CompletedLessons")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("completed_lessons");

                    b.Property<int?>("CompletedQuizzes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("completed_quizzes");

                    b.Property<int>("EnrollementId")
                        .HasColumnType("int")
                        .HasColumnName("enrollement_id");

                    b.Property<decimal?>("ProgressPercentage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(0.00m)
                        .HasColumnName("progress_percentage");

                    b.Property<int>("TotalLessons")
                        .HasColumnType("int")
                        .HasColumnName("total_lessons");

                    b.Property<int>("TotalQuizzes")
                        .HasColumnType("int")
                        .HasColumnName("total_quizzes");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ProgressId")
                        .HasName("PK__user_cou__49B3D8C1F7704A82");

                    b.HasIndex("EnrollementId");

                    b.ToTable("user_course_progress", (string)null);
                });

            modelBuilder.Entity("CourseQuiz", b =>
                {
                    b.HasOne("FliesProject.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__course_qu__cours__72C60C4A");

                    b.HasOne("FliesProject.Models.Quiz", null)
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .IsRequired()
                        .HasConstraintName("FK__course_qu__quiz___73BA3083");
                });

            modelBuilder.Entity("FliesProject.Models.Certificate", b =>
                {
                    b.HasOne("FliesProject.Models.Enrollement", "Enrollement")
                        .WithMany("Certificates")
                        .HasForeignKey("EnrollementId")
                        .IsRequired()
                        .HasConstraintName("FK__certifica__enrol__7A672E12");

                    b.Navigation("Enrollement");
                });

            modelBuilder.Entity("FliesProject.Models.Course", b =>
                {
                    b.HasOne("FliesProject.Models.User", "CreatedByNavigation")
                        .WithMany("Courses")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__Courses__created__2F10007B");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("FliesProject.Models.CourseTransaction", b =>
                {
                    b.HasOne("FliesProject.Models.Enrollement", "Enrollement")
                        .WithMany("CourseTransactions")
                        .HasForeignKey("EnrollementId")
                        .IsRequired()
                        .HasConstraintName("FK__course_tr__enrol__7F2BE32F");

                    b.Navigation("Enrollement");
                });

            modelBuilder.Entity("FliesProject.Models.Enrollement", b =>
                {
                    b.HasOne("FliesProject.Models.Course", "Course")
                        .WithMany("Enrollements")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__enrolleme__cours__656C112C");

                    b.HasOne("FliesProject.Models.User", "Mentor")
                        .WithMany("EnrollementMentors")
                        .HasForeignKey("MentorId")
                        .IsRequired()
                        .HasConstraintName("FK__enrolleme__mento__6477ECF3");

                    b.HasOne("FliesProject.Models.User", "Student")
                        .WithMany("EnrollementStudents")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__enrolleme__statu__6383C8BA");

                    b.Navigation("Course");

                    b.Navigation("Mentor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FliesProject.Models.Lesson", b =>
                {
                    b.HasOne("FliesProject.Models.Section", "Section")
                        .WithMany("Lessons")
                        .HasForeignKey("SectionId")
                        .IsRequired()
                        .HasConstraintName("FK__Lessons__section__36B12243");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("FliesProject.Models.QuizAnswer", b =>
                {
                    b.HasOne("FliesProject.Models.QuizQuestion", "Question")
                        .WithMany("QuizAnswers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__quiz_answ__quest__4E88ABD4");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("FliesProject.Models.QuizComment", b =>
                {
                    b.HasOne("FliesProject.Models.QuizComment", "ParentComment")
                        .WithMany("InverseParentComment")
                        .HasForeignKey("ParentCommentId")
                        .HasConstraintName("FK__quiz_comm__paren__5CD6CB2B");

                    b.HasOne("FliesProject.Models.Quiz", "Quiz")
                        .WithMany("QuizComments")
                        .HasForeignKey("QuizId")
                        .IsRequired()
                        .HasConstraintName("FK__quiz_comm__quiz___5AEE82B9");

                    b.HasOne("FliesProject.Models.User", "User")
                        .WithMany("QuizComments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__quiz_comm__user___5BE2A6F2");

                    b.Navigation("ParentComment");

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FliesProject.Models.QuizQuestion", b =>
                {
                    b.HasOne("FliesProject.Models.Quiz", "Quiz")
                        .WithMany("QuizQuestions")
                        .HasForeignKey("QuizId")
                        .IsRequired()
                        .HasConstraintName("FK__quiz_ques__quiz___4AB81AF0");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("FliesProject.Models.QuizTransaction", b =>
                {
                    b.HasOne("FliesProject.Models.Quiz", "Quiz")
                        .WithMany("QuizTransactions")
                        .HasForeignKey("QuizId")
                        .IsRequired()
                        .HasConstraintName("FK__quiz_tran__quiz___412EB0B6");

                    b.HasOne("FliesProject.Models.User", "User")
                        .WithMany("QuizTransactions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__quiz_tran__user___403A8C7D");

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FliesProject.Models.QuizWritingSample", b =>
                {
                    b.HasOne("FliesProject.Models.QuizQuestion", "Question")
                        .WithMany("QuizWritingSamples")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__quiz_writ__quest__5165187F");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("FliesProject.Models.Section", b =>
                {
                    b.HasOne("FliesProject.Models.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Sections__course__32E0915F");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("FliesProject.Models.UserCourseProgress", b =>
                {
                    b.HasOne("FliesProject.Models.Enrollement", "Enrollement")
                        .WithMany("UserCourseProgresses")
                        .HasForeignKey("EnrollementId")
                        .IsRequired()
                        .HasConstraintName("FK__user_cour__enrol__6C190EBB");

                    b.Navigation("Enrollement");
                });

            modelBuilder.Entity("FliesProject.Models.Course", b =>
                {
                    b.Navigation("Enrollements");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("FliesProject.Models.Enrollement", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("CourseTransactions");

                    b.Navigation("UserCourseProgresses");
                });

            modelBuilder.Entity("FliesProject.Models.Quiz", b =>
                {
                    b.Navigation("QuizComments");

                    b.Navigation("QuizQuestions");

                    b.Navigation("QuizTransactions");
                });

            modelBuilder.Entity("FliesProject.Models.QuizComment", b =>
                {
                    b.Navigation("InverseParentComment");
                });

            modelBuilder.Entity("FliesProject.Models.QuizQuestion", b =>
                {
                    b.Navigation("QuizAnswers");

                    b.Navigation("QuizWritingSamples");
                });

            modelBuilder.Entity("FliesProject.Models.Section", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("FliesProject.Models.User", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("EnrollementMentors");

                    b.Navigation("EnrollementStudents");

                    b.Navigation("QuizComments");

                    b.Navigation("QuizTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
